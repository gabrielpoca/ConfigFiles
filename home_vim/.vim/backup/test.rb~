#!/opt/local/bin/ruby
#require 'rubygems'
require 'ncurses'
require 'logger'
require 'rbcurse-extras'
require 'rbcurse/rwidget'
if $0 == __FILE__
  include RubyCurses

  begin
  # Initialize curses
    VER::start_ncurses  # this is initializing colors via ColorMap.setup
    $log = Logger.new("view.log")
    $log.level = Logger::DEBUG

    @window = VER::Window.root_window
    # Initialize few color pairs 
    # Create the window to be associated with the form 
    # Un post form and free the memory

    catch(:close) do
      colors = Ncurses.COLORS
      $log.debug "START #{colors} colors test2.rb --------- #{@window} "
      @form = Form.new @window
      @form.window.printstring 0, 30, "Demo of rbcurse - prog1.rb", $normalcolor, 'reverse'
      r = 1; fc = 12;
      mnemonics = %w[ n l r p]
      %w[ name line regex password].each_with_index do |w,i|
        field = Field.new @form do
          name   w 
          row  r 
          col  fc 
          display_length  30
          #set_buffer "abcd " 
          set_label Label.new @form, {'text' => w, 'color'=>'cyan','mnemonic'=> mnemonics[i]}
        end
        r += 1
      end
      @form.repaint
      @window.wrefresh
      Ncurses::Panel.update_panels
      while((ch = @window.getchar()) != KEY_F1 )
        #@cell.repaint @form.window, 29,1, "ok #{ch} pressed!"
        #@cell.repaint @form.window, 29,45, "#{ch} pressed!"
        @form.handle_key(ch)
        #@form.repaint
        @window.wrefresh
      end
    end
  rescue => ex
  ensure
      @window.destroy if !@window.nil?
    VER::stop_ncurses
    p ex if ex
    p(ex.backtrace.join("\n")) if ex
    $log.debug( ex) if ex
    $log.debug(ex.backtrace.join("\n")) if ex
  end
end


