:-op(800,xfx,--->).
:- dynamic n/1.
:- dynamic tam/1.

[n(X),n(Y),X>Y] ---> [Z is X-Y, substituir(n(X),n(Z))].
[n(X),n(Y),tam(N), N>1, X==Y] ---> [remover(n(X)), 
					N1 is N-1,
					substituir(tam(N),tam(N1))].
[n(X),tam(1)] ---> [write('o resultado Ã© : '),
						write(X),nl,stop].


run :- Condicoes ---> Accoes, 
				testar(Condicoes),
				executar(Accoes).

testar([]).
testar([X|R]) :- X, testar(R).

executar([stop]) :- !. 
executar([]) :- run.
executar([X|R]) :- X,
			executar(R).

inserir(A) :- assert(A).
remover(A) :- retract(A).
substituir(A,B) :- remover(A),
				inserir(B).


mdc(Lista) :- 
	limpar,
	inLista(Lista),
	comprimento(N,Lista),
	inserir(tam(N)),
	run.

limpar :- remover(n(X)),
			limpar.
limpar :- remover(tam(_)),
			limpar.
limpar.	

inLista([]).
inLista([X|R]) :- inserir(n(X)),
					inLista(R).

comprimento(0,[]).
comprimento(X,[_|T]) :- comprimento(N1,T), X is N1 + 1.
