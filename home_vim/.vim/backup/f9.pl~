:- set_prolog_flag( discontiguous_warnings,off ).
:- set_prolog_flag( single_var_warnings,off ).
:- set_prolog_flag( unknown,fail ).

nao9(Q):- Q, !, fail.
nao9(Q).

demoT9(A,Q):- propriedades9(A,T), processar9(Q,T).
demoT9(A,Q):- e_um9(A,D), demoT9(D,Q).

demo9(A,Q):- propriedades9(A,T), processar9(Q,T).
demo9(A,Q):- propriedades9(A,T), nao9(pertence9(T,Q)), e_um9(A,D), demo9(D,Q).

processar9(X,X).
processar9(X,Lista):- pertence9(Lista,X).

pertence9([H|_],H).
pertence9([_|T],H):- pertence9(T,H).

propriedades9( ave, 		[ coberto(penas), movimento(voo) ]).
propriedades9( canario, 	[ cor(amarelo), som(chilro) ]).
propriedades9( papagaio, 	[ comida(pao), som(fala), cor(verde), cor(vermelho) ]).
propriedades9( boby, 		[ cor(preto), cor(branco) ]).
propriedades9( lulu, 		[ alimento(tremocos), coberto(pelos) ]).

e_um9(boby, canario).
e_um9(canario, ave).
e_um9(papagaio, ave).
e_um9(lulu, papagaio).
